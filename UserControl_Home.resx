<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picturebox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gCIiAIiIAiIgCIiAIiIAiIgP/9k=
</value>
  </data>
</root>